{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/ContactElement/ContactElement.module.css","Components/Container/Container.module.css","Components/Section/Section.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactElement/ContactElement.js","Components/ContactList/ContactList.js","App.js","hooks/hooks.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","protoType","PropTypes","string","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","resetForm","form","preventDefault","contact","id","uuidv4","label","input","type","pattern","required","onChange","input_number","button","func","Filter","filter","onChangeFilter","isRequired","ContactsEl","onDeleteContact","ce","box","btn","onClick","Contacts","contacts","deleteContact","c","list","map","item","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","currentId","data","some","includes","alert","toLocaleLowerCase","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f78309b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2I8DH\",\"label\":\"ContactForm_label__1XEvm\",\"input\":\"ContactForm_input__2SjAB\",\"input-number\":\"ContactForm_input-number__3_rMi\",\"input_number\":\"ContactForm_input_number__3QXtR\",\"button\":\"ContactForm_button__300br\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__37oPH\",\"input\":\"Filter_input__2x9Ov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Xa2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactElement_box__2wJEb\",\"btn\":\"ContactElement_btn__2bZVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container___yzH4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3kZ2Y\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.protoType = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    onSubmit(contact);\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Enter name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"The name can only contain letters, apostrophe, dash and spaces. For example: Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Enter number\r\n        <input\r\n          className={s.input_number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"The phone number can consist of numerals, spaces, dashes, brackets and start with +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.protoType = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Enter the contact's name. Search is not sensitive to input characters.\"\r\n        required\r\n        onChange={onChangeFilter}\r\n        value={filter}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.protoType = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport ce from './ContactElement.module.css';\r\n\r\nconst ContactsEl = ({ name, number, id, onDeleteContact }) => (\r\n  <p className={ce.box}>\r\n    <span>{name}:</span>\r\n    <span>{number}</span>\r\n    <button\r\n      className={ce.btn}\r\n      type=\"button\"\r\n      onClick={() => onDeleteContact(id)}\r\n    >\r\n      Remove\r\n    </button>\r\n  </p>\r\n);\r\nContactsEl.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\nexport default ContactsEl;\r\n","import PropTypes from 'prop-types';\r\nimport c from './ContactList.module.css';\r\nimport ContactsEl from '../ContactElement/ContactElement';\r\n\r\nconst Contacts = ({ contacts, deleteContact }) => (\r\n  <ul className={c.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={c.item}>\r\n        <ContactsEl\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => deleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContacts.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useState } from 'react';\nimport Container from './Components/Container';\nimport Section from './Components/Section';\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\nimport useLocalStorage from './hooks/hooks';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  // додаються контакти\n  const addContact = data => {\n    // this.setState(prevState => {\n    if (contacts.some(contact => contact.name.includes(data.name))) {\n      return alert(`${data.name} is already in contacts!`);\n    }\n\n    setContacts([...contacts, data]);\n  };\n\n  const deleteContact = currentId => {\n    // this.setState(prevState => {\n    setContacts([...contacts.filter(contact => contact.id !== currentId)]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value.toLocaleLowerCase());\n  };\n\n  const turnOnFilter = () => {\n    // const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter),\n    );\n  };\n\n  return (\n    <Container title=\"Phonebook\">\n      <Section title=\"You can add new contacts below:\">\n        <ContactForm onSubmit={addContact}></ContactForm>\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter filter={filter} onChangeFilter={changeFilter} />\n        {filter === '' ? (\n          <ContactList contacts={contacts} deleteContact={deleteContact} />\n        ) : (\n          <ContactList\n            contacts={turnOnFilter()}\n            deleteContact={deleteContact}\n          />\n        )}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state, key]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}